type Account @entity {
  id: ID!
  numBleeps: BigInt!
  bleeps: [Bleep!]! @derivedFrom(field: "owner")
  numMelodies: BigInt!
  melodies: [Melody!]! @derivedFrom(field: "owner")
}

type Bleep @entity {
  id: ID!
  owner: Account
}

type Melody @entity {
  id: ID!
  owner: Account
  creator: Account!
  nameHash: Bytes!
  melodyHash: Bytes!
  auction: MelodyAuction

  reserveTimestamp: BigInt!
  revealTimestamp: BigInt
  mintTimestamp: BigInt
  revealed: Boolean!
  minted: Boolean!

  name: String
  data1: Bytes
  data2: Bytes
  speed: Int

  # // TODO
  # bleeps
}

type MelodyAuction @entity {
  id: ID!
  melody: Melody!
  price: BigInt!
  bidder: Account
  lastBidTime: BigInt
  numBidders: BigInt!
  startTime: BigInt!
  endTime: BigInt!
  settled: Boolean!
}

type BleepsSummary @entity {
  id: ID!
  numOwners: BigInt!
  numTokens: BigInt!
  numTransfers: BigInt!
}

type MelodiesSummary @entity {
  id: ID!
  numOwners: BigInt!
  numCreators: BigInt!
  numTokens: BigInt!
  numTransfers: BigInt!
  numReserved: BigInt!
  numRevealed: BigInt!
  numToReveal: BigInt!
  numToMint: BigInt!
  # numBidders: BigInt!
}

# type All @entity {
#   id: ID!
#   numOwners: BigInt!
#   numTokens: BigInt!
# }
